<?php

declare(strict_types=1);

/*
 * This file has been auto generated by Jane,
 *
 * Do no edit it directly.
 */

namespace Braze\Normalizer;

use Braze\Runtime\Normalizer\CheckArray;
use Braze\Runtime\Normalizer\ValidatorTrait;
use Jane\Component\JsonSchemaRuntime\Reference;
use Symfony\Component\HttpKernel\Kernel;
use Symfony\Component\Serializer\Normalizer\DenormalizerAwareInterface;
use Symfony\Component\Serializer\Normalizer\DenormalizerAwareTrait;
use Symfony\Component\Serializer\Normalizer\DenormalizerInterface;
use Symfony\Component\Serializer\Normalizer\NormalizerAwareInterface;
use Symfony\Component\Serializer\Normalizer\NormalizerAwareTrait;
use Symfony\Component\Serializer\Normalizer\NormalizerInterface;

if (!class_exists(Kernel::class) or (Kernel::MAJOR_VERSION >= 7 or Kernel::MAJOR_VERSION === 6 and Kernel::MINOR_VERSION === 4)) {
    class PreferenceCenterV1PostBodyNormalizer implements DenormalizerInterface, NormalizerInterface, DenormalizerAwareInterface, NormalizerAwareInterface
    {
        use DenormalizerAwareTrait;
        use NormalizerAwareTrait;
        use CheckArray;
        use ValidatorTrait;

        public function supportsDenormalization(mixed $data, string $type, ?string $format = null, array $context = []): bool
        {
            return $type === 'Braze\\Model\\PreferenceCenterV1PostBody';
        }

        public function supportsNormalization(mixed $data, ?string $format = null, array $context = []): bool
        {
            return is_object($data) && get_class($data) === 'Braze\\Model\\PreferenceCenterV1PostBody';
        }

        public function denormalize(mixed $data, string $type, ?string $format = null, array $context = []): mixed
        {
            if (isset($data['$ref'])) {
                return new Reference($data['$ref'], $context['document-origin']);
            }
            if (isset($data['$recursiveRef'])) {
                return new Reference($data['$recursiveRef'], $context['document-origin']);
            }
            $object = new \Braze\Model\PreferenceCenterV1PostBody();
            if (null === $data || false === \is_array($data)) {
                return $object;
            }
            if (\array_key_exists('name', $data)) {
                $object->setName($data['name']);
                unset($data['name']);
            }
            if (\array_key_exists('preference_center_title', $data)) {
                $object->setPreferenceCenterTitle($data['preference_center_title']);
                unset($data['preference_center_title']);
            }
            if (\array_key_exists('preference_center_page_html', $data)) {
                $object->setPreferenceCenterPageHtml($data['preference_center_page_html']);
                unset($data['preference_center_page_html']);
            }
            if (\array_key_exists('confirmation_page_html', $data)) {
                $object->setConfirmationPageHtml($data['confirmation_page_html']);
                unset($data['confirmation_page_html']);
            }
            if (\array_key_exists('state', $data)) {
                $object->setState($data['state']);
                unset($data['state']);
            }
            if (\array_key_exists('options', $data)) {
                $object->setOptions($this->denormalizer->denormalize($data['options'], 'Braze\\Model\\PreferenceCenterV1PostBodyOptions', 'json', $context));
                unset($data['options']);
            }
            foreach ($data as $key => $value) {
                if (preg_match('/.*/', (string) $key)) {
                    $object[$key] = $value;
                }
            }

            return $object;
        }

        public function normalize(mixed $object, ?string $format = null, array $context = []): array|string|int|float|bool|\ArrayObject|null
        {
            $data = [];
            if ($object->isInitialized('name') && null !== $object->getName()) {
                $data['name'] = $object->getName();
            }
            if ($object->isInitialized('preferenceCenterTitle') && null !== $object->getPreferenceCenterTitle()) {
                $data['preference_center_title'] = $object->getPreferenceCenterTitle();
            }
            if ($object->isInitialized('preferenceCenterPageHtml') && null !== $object->getPreferenceCenterPageHtml()) {
                $data['preference_center_page_html'] = $object->getPreferenceCenterPageHtml();
            }
            if ($object->isInitialized('confirmationPageHtml') && null !== $object->getConfirmationPageHtml()) {
                $data['confirmation_page_html'] = $object->getConfirmationPageHtml();
            }
            if ($object->isInitialized('state') && null !== $object->getState()) {
                $data['state'] = $object->getState();
            }
            if ($object->isInitialized('options') && null !== $object->getOptions()) {
                $data['options'] = $this->normalizer->normalize($object->getOptions(), 'json', $context);
            }
            foreach ($object as $key => $value) {
                if (preg_match('/.*/', (string) $key)) {
                    $data[$key] = $value;
                }
            }

            return $data;
        }

        public function getSupportedTypes(?string $format = null): array
        {
            return ['Braze\\Model\\PreferenceCenterV1PostBody' => false];
        }
    }
} else {
    class PreferenceCenterV1PostBodyNormalizer implements DenormalizerInterface, NormalizerInterface, DenormalizerAwareInterface, NormalizerAwareInterface
    {
        use DenormalizerAwareTrait;
        use NormalizerAwareTrait;
        use CheckArray;
        use ValidatorTrait;

        public function supportsDenormalization($data, $type, ?string $format = null, array $context = []): bool
        {
            return $type === 'Braze\\Model\\PreferenceCenterV1PostBody';
        }

        public function supportsNormalization(mixed $data, ?string $format = null, array $context = []): bool
        {
            return is_object($data) && get_class($data) === 'Braze\\Model\\PreferenceCenterV1PostBody';
        }

        public function denormalize($data, $type, $format = null, array $context = [])
        {
            if (isset($data['$ref'])) {
                return new Reference($data['$ref'], $context['document-origin']);
            }
            if (isset($data['$recursiveRef'])) {
                return new Reference($data['$recursiveRef'], $context['document-origin']);
            }
            $object = new \Braze\Model\PreferenceCenterV1PostBody();
            if (null === $data || false === \is_array($data)) {
                return $object;
            }
            if (\array_key_exists('name', $data)) {
                $object->setName($data['name']);
                unset($data['name']);
            }
            if (\array_key_exists('preference_center_title', $data)) {
                $object->setPreferenceCenterTitle($data['preference_center_title']);
                unset($data['preference_center_title']);
            }
            if (\array_key_exists('preference_center_page_html', $data)) {
                $object->setPreferenceCenterPageHtml($data['preference_center_page_html']);
                unset($data['preference_center_page_html']);
            }
            if (\array_key_exists('confirmation_page_html', $data)) {
                $object->setConfirmationPageHtml($data['confirmation_page_html']);
                unset($data['confirmation_page_html']);
            }
            if (\array_key_exists('state', $data)) {
                $object->setState($data['state']);
                unset($data['state']);
            }
            if (\array_key_exists('options', $data)) {
                $object->setOptions($this->denormalizer->denormalize($data['options'], 'Braze\\Model\\PreferenceCenterV1PostBodyOptions', 'json', $context));
                unset($data['options']);
            }
            foreach ($data as $key => $value) {
                if (preg_match('/.*/', (string) $key)) {
                    $object[$key] = $value;
                }
            }

            return $object;
        }

        /**
         * @return array|string|int|float|bool|\ArrayObject|null
         */
        public function normalize($object, $format = null, array $context = [])
        {
            $data = [];
            if ($object->isInitialized('name') && null !== $object->getName()) {
                $data['name'] = $object->getName();
            }
            if ($object->isInitialized('preferenceCenterTitle') && null !== $object->getPreferenceCenterTitle()) {
                $data['preference_center_title'] = $object->getPreferenceCenterTitle();
            }
            if ($object->isInitialized('preferenceCenterPageHtml') && null !== $object->getPreferenceCenterPageHtml()) {
                $data['preference_center_page_html'] = $object->getPreferenceCenterPageHtml();
            }
            if ($object->isInitialized('confirmationPageHtml') && null !== $object->getConfirmationPageHtml()) {
                $data['confirmation_page_html'] = $object->getConfirmationPageHtml();
            }
            if ($object->isInitialized('state') && null !== $object->getState()) {
                $data['state'] = $object->getState();
            }
            if ($object->isInitialized('options') && null !== $object->getOptions()) {
                $data['options'] = $this->normalizer->normalize($object->getOptions(), 'json', $context);
            }
            foreach ($object as $key => $value) {
                if (preg_match('/.*/', (string) $key)) {
                    $data[$key] = $value;
                }
            }

            return $data;
        }

        public function getSupportedTypes(?string $format = null): array
        {
            return ['Braze\\Model\\PreferenceCenterV1PostBody' => false];
        }
    }
}
